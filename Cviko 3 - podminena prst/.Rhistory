library (prob)
#	Priklad 1
kostky <- rolldie (2)
S <- probspace (kostky)
# A = 2 petky
# B = soucet delitelny peti
A <- subset (S, X1 == 5 & X2 == 5)
B <- subset (S, (X1 + X2) %% 5 == 0)
AB <- intersect (A, B)
Prob (AB) / Prob (B)
Prob (AB)
Prob (AB) * 36
u <- c ("D", "H")
p <- c (0.5, 0.5)
iidspace (u, 1, probs = p)
S <- iidspace (u, 2, probs = p)
S
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
# A = obe deti jsou dcery
# B = jedno dite je dcera
# P (A | B) = ?
B <- subset (S, isin (S, "D"))
A <- subset (S, isin (S, c ("D", "D")))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
Prob (AB)
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
u <- c ("D", "H")
p <- c (0.5, 0.5)
iidspace (u, 1, probs = p)
S <- iidspace (u, 4, probs = p)
S
u <- c ("D", "H")
p <- c (0.5, 0.5)
iidspace (u, 2, probs = p)
u <- c ("D", "H")
p <- c (0.5, 0.5)
iidspace (u, 1, probs = p)
S <- iidspace (u, 4, probs = p)
S
iidspace (u, 1, probs = p)
S <- iidspace (u, 2, probs = p)
S
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
View(S)
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
View(S)
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
u <- c ("DM", "Do", "H")
# Ceska republika: 1 osoba z 40 ma jmeno Marie
p1 <- 1 / 40
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DM"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# Pravdepodobnostn prostor vytvorime primym zapisem
kategorie <- rep (c ("A", "B", "C"), each = 2)
nehoda <- rep (c ("ano", "ne"), 3)
# Zkombinujeme do datove tabulky
el.jevy <- data.frame (kategorie, nehoda)
# Zadame pravdepodobnosti
p <- c (0.7 * 0.03, 0.7 * (1-0.03), 0.2 * 0.06, 0.2 * (1-0.06), 0.1 * 0.1, 0.1 * (1-0.1))
S <- probspace (el.jevy, probs = p)
S
sum (S$probs)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "kategorie - nehoda")
legend ("right", legend = paste (S$kategorie, S$nehoda, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
N <- subset (S, nehoda == "ano")
Prob (N)
A <- subset (S, kategorie == "A")
AN <- intersect (A, N)
Prob (AN) / Prob (N)
Prob (AN)
# Analogicky zkontrolujte ostatni podminene pravdepodobnosti a pravdepodobnosti pruniku
AB <- subset (S, isin("A", "B"))
ABN <- intersect (AB, N)
Prob (ABN) / Prob (N)
Prob (ABN)
S
A <- subset (S, kategorie == "A")
A <- subset (S, kategorie == "A")
A
A
A <- subset (S, kategorie == "A" | kategorie == "B" )
A
# Analogicky zkontrolujte ostatni podminene pravdepodobnosti a pravdepodobnosti pruniku
AB <- subset (S, kategorie == "A" | kategorie == "B")
AN <- intersect (AB, N)
Prob (ABN) / Prob (N)
Prob (ABN)
# Analogicky zkontrolujte ostatni podminene pravdepodobnosti a pravdepodobnosti pruniku
AB <- subset (S, kategorie == "A" | kategorie == "B")
AB
AB
ABN <- intersect (AB, N)
Prob (ABN) / Prob (N)
Prob (ABN)
B <- subset (S, kategorie == "B")
Prob (ABN) / Prob (N)
Prob (ABN)
B <- subset (S, kategorie == "B")
BN <- intersect (B, N)
Prob (BN) / Prob (N)
Prob (BN)
C <- subset (S, kategorie == "C")
CN <- intersect (C, N)
Prob (CN) / Prob (N)
Prob (CN)
S
sum (S$probs)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "kategorie - nehoda")
legend ("right", legend = paste (S$kategorie, S$nehoda, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
N <- subset (S, nehoda == "ano")
Prob (N)
C <- subset (S, kategorie == "C")
CN <- intersect (C, N)
Prob (CN) / Prob (C)
Prob (CN)
Prob (BN) / Prob (N)
Prob (BN)
# Pravdepodobnostn prostor vytvorime primym zapisem
kategorie <- rep (c ("A", "B", "C"), each = 2)
nehoda <- rep (c ("ano", "ne"), 3)
# Zkombinujeme do datove tabulky
el.jevy <- data.frame (kategorie, nehoda)
# Zadame pravdepodobnosti
p <- c (0.7 * 0.03, 0.7 * (1-0.03), 0.2 * 0.06, 0.2 * (1-0.06), 0.1 * 0.1, 0.1 * (1-0.1))
S <- probspace (el.jevy, probs = p)
# Zadame pravdepodobnosti
p <- c (0.7 * 0.03, 0.7 * (1-0.03), 0.2 * 0.06, 0.2 * (1-0.06), 0.1 * 0.1, 0.1 * (1-0.1))
p
S <- probspace (el.jevy, probs = p)
S
sum (S$probs)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "kategorie - nehoda")
legend ("right", legend = paste (S$kategorie, S$nehoda, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
N <- subset (S, nehoda == "ano")
Prob (N)
A <- subset (S, kategorie == "A")
AN <- intersect (A, N)
N <- subset (S, nehoda == "ano")
N <- subset (S, nehoda == "ano")
N <- subset (S, nehoda == "ano")
Prob (N)
library("prob", lib.loc="D:/R/R-3.5.2/library")
legend ("right", legend = paste (S$kategorie, S$nehoda, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
N <- subset (S, nehoda == "ano")
Prob (N)
Prob (BN) / Prob (N)
Prob (BN)
C <- subset (S, kategorie == "C")
CN <- intersect (C, N)
Prob (CN) / Prob (N)
Prob (CN)
C <- subset (S, kategorie == "C")
CN <- intersect (C, N)
Prob (CN) / Prob (C)
choose(8,5)
choose(10,7)
choose(15,7)
choose(5,3)
