barplot (pB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
sum(pB)
# (B)
b <- seq (0, 3)
pB <- pbinom (b, size = 3, prob = theta)
pB <- dbinom (b, size = 3, prob = theta)
barplot (pB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
sum(pB)
# (B)
b <- seq (0, 2)
pB <- pbinom (b, size = 3, prob = theta)
pB <- dbinom (b, size = 3, prob = theta)
barplot (pB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
sum(pB)
# (B)
b <- seq (0, 2)
pB <- pbinom (b, size = 3, prob = theta)
pB <- dbinom (b, size = 3, prob = theta)
barplot (pB, col = rainbow (length (6)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
# (B)
b <- seq (0, 2)
pB <- pbinom (b, size = 3, prob = theta)
pB <- dbinom (b, size = 3, prob = theta)
barplot (pB, col = rainbow (length (b)), names.arg = 5, ylab = "pravdepodobnostni funkce", main = titulek)
sum(pB)
pB <- dbinom (b, size = 3, prob = theta)
pB <- pbinom (b, size = 3, prob = theta)
barplot (pB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
# (B)
b <- seq (0, 3)
pB <- dbinom (b, size = 3, prob = theta)
pB <- pbinom (b, size = 3, prob = theta)
barplot (pB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
x <- seq (0, n)
titulek <- paste ("binomicke rozdeleni,", "n =", n)
# pravdepodobnostni funkce
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
titulek <- paste ("binomicke rozdeleni,", "n =", n)
# pravdepodobnostni funkce
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
points (x, pravdepodobnostni, pch = 16, cex = 0.5, col = "red")
# distribucni funkce
distribucni <- pbinom (x, size = n, prob = theta)
# jedna se o skokovou funkci
dist.fce <- stepfun (x, c (0, distribucni))
# distribucni funkce je vzdy zprava spojita,
# tzn. leve krajni body vzdy patri k useckam
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
# (B)
b <- seq (0, 5)
prstB <- dbinom (b, size = n, prob = theta)
barplot (prstB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
distrB <- pbinom (b, size = n, prob = theta)
dist.fce <- stepfun (x, c (0, distribucni))
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
prstB <- dbinom (b, size = n, prob = theta)
barplot (prstB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
distrB <- pbinom (b, size = n, prob = theta)
dist.fce <- stepfun (x, c (0, distrB))
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
distrB <- pbinom (b, size = n, prob = theta)
dist.fce <- stepfun (b, c (0, distrB))
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
prstB <- dbinom (6, size = n, prob = theta)
barplot (prstB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
distrB <- pbinom (b, size = n, prob = theta)
dist.fce <- stepfun (b, c (0, distrB))
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
# (B)
b <- seq (0, 10)
prstB <- dbinom (b, size = n, prob = theta)
barplot (prstB, col = rainbow (length (b)), names.arg = b, ylab = "pravdepodobnostni funkce", main = titulek)
n <- 10
theta <- 1/2
x <- seq (0, n)
titulek <- paste ("binomicke rozdeleni,", "n =", n)
# pravdepodobnostni funkce
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
points (x, pravdepodobnostni, pch = 16, cex = 0.5, col = "red")
# distribucni funkce
distribucni <- pbinom (x, size = n, prob = theta)
# jedna se o skokovou funkci
dist.fce <- stepfun (x, c (0, distribucni))
n <- 10
theta <- 1/2
x <- seq (0, n)
titulek <- paste ("binomicke rozdeleni,", "n =", n)
titulek <- paste ("binomicke rozdeleni,", "n =", n)
# pravdepodobnostni funkce
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
# pravdepodobnostni funkce
pravdepodobnostni <- dbinom (x, size = n, prob = theta)
pravdepodobnostni
theta <- 0.4
titulek <- "geometricke rozdeleni"
#	mozne hodnoty x jsou vsechna prirozena cisla,
#	horni mez sekvence hodnot x je tak nutno patricne upravit
x <- seq (0, 10)
# pravdepodobnostni funkce
pravdepodobnostni <- dgeom (x, prob = theta)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
points (x, pravdepodobnostni, pch = 16, cex = 0.5, col = "red")
# distribucni funkce
distribucni <- pgeom (x, prob = theta)
# jedna se o skokovou funkci
dist.fce <- stepfun (x, c (0, distribucni))
# ======================================================================
theta <- 0.4
# distribucni funkce je vzdy zprava spojita,
# tzn. leve krajni body vzdy patri k useckam
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
# (A)
gA <- pgeom(10, prob = theta)
gA
#	mozne hodnoty x jsou vsechna prirozena cisla,
#	horni mez sekvence hodnot x je tak nutno patricne upravit
x <- seq (0, 20)
titulek <- "geometricke rozdeleni"
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
# pravdepodobnostni funkce
pravdepodobnostni <- dgeom (x, prob = theta)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
points (x, pravdepodobnostni, pch = 16, cex = 0.5, col = "red")
# distribucni funkce
distribucni <- pgeom (x, prob = theta)
# jedna se o skokovou funkci
dist.fce <- stepfun (x, c (0, distribucni))
# ======================================================================
theta <- 0.4
# distribucni funkce je vzdy zprava spojita,
# tzn. leve krajni body vzdy patri k useckam
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
# (A)
gA <- pgeom(10, prob = theta)
gA
# (B)
gB <- 1 - pgeom(3 , prob = theta)
gB
# (C)
gC <- pgeom(8, theta) - pgeom(4, theta)
gC
# pravdepodobnostni funkce
pravdepodobnostni <- dgeom (x, prob = theta)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
points (x, pravdepodobnostni, pch = 16, cex = 0.5, col = "red")
# distribucni funkce
distribucni <- pgeom (x, prob = theta)
# jedna se o skokovou funkci
dist.fce <- stepfun (x, c (0, distribucni))
# distribucni funkce je vzdy zprava spojita,
# tzn. leve krajni body vzdy patri k useckam
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
# (A)
pA <- ppois(0, lambda = lambda)
lambda <- 4
#	mozne hodnoty x jsou vsechna prirozena cisla,
#	horni mez sekvence hodnot x v R je tak nutno patricne upravit
x <- seq (0, 10)
titulek <- "Poissonovo rozdeleni"
# pravdepodobnostni funkce
pravdepodobnostni <- dpois (x, lambda = lambda)
#	klasicky bodovy (korektne matematicky) graf
plot (x, pravdepodobnostni, type = "h", col = "red", ylab = "pravdepodobnostni funkce", main = titulek)
points (x, pravdepodobnostni, pch = 16, cex = 0.5, col = "red")
# distribucni funkce
distribucni <- ppois (x, lambda = lambda)
# distribucni funkce je vzdy zprava spojita,
# tzn. leve krajni body vzdy patri k useckam
plot (dist.fce, verticals = FALSE, col = "red", pch = 16, cex = 0.5, ylab = "distribucni funkce", main = titulek)
#	sloupcovy graf
barplot (pravdepodobnostni, col = rainbow (length (x)), names.arg = x, ylab = "pravdepodobnostni funkce", main = titulek)
# jedna se o skokovou funkci
dist.fce <- stepfun (x, c (0, distribucni))
# (A)
pA <- ppois(0, lambda = lambda)
pA
# (B)
pB <- ppois(4, lambda = lambda)
pB
# (C)
pC <- 1 - pA
pC
# (D)
pD <- ppois(6, lambda = lambda) - ppois(1, lambda = lambda)
pD
a <- 0
b <- 10
x <- seq (a-10, b+10, by = 0.01)
titulek <- "rovnomerne spojite rozdeleni"
# hustota pravdepodobnosti
hustota <- dunif (x, a, b)
# pravdepodobnost je dana plochou pod grafem hustoty pravdepodobnosti
# v R se ploch kresli jako vybarveny mnohouhelnik
polygon (c(min (x), x, max(x)), c(0, hustota, 0), col = "#CCFFCC")
# dokazeme zvyraznit i plochu pod krivkou v zadanem intervalu,
# napr. v rozmezi od 3 do 8, vyuzijeme pritom funkci "which"
indexy <- which ((x >= 3) & (x <= 8))
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
# distribucni funkce je spojita,
#	graficky ji zobrazujeme jako krivku
distribucni <- punif (x, a, b)
#	hustotu graficky zobrazujeme jako krivku
plot (x, hustota, type = "l", col = "blue", lwd = 2, ylab = "hustota pravdepodobnosti", main = titulek)
plot (x, distribucni, type = "l", col = "blue", lwd = 2, ylab = "distribucni funkce", main = titulek)
pA <- punif(2, a, b)
pA
pA <- dunif(2, a, b)
pA
pA <- punif(2, a = 2, b= 2)
pA
pA <- punif(2, a, b)
pA
pA <- dunif(2, a, b)
pA
pB <- punif(5, a, b)
pB
pC <- 1 -punif(2, a, b)
pC
pD <- punif(8,a,b) - punif(3,a,b)
pD
lambda <- 4
# pravy konec intervalu hodnot x nutno vhodne upravovat
x <- seq (0, 1.5, by = 0.01)
titulek <- "exponencialni rozdeleni"
# hustota pravdepodobnosti
hustota <- dexp (x, rate = lambda)
#	hustotu graficky zobrazujeme jako krivku
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti", main = titulek)
# pravdepodobnost je dana plochou pod grafem hustoty pravdepodobnosti
# v R se ploch kresli jako vybarveny mnohouhelnik
polygon (c(min (x), x, max(x)), c(0, hustota, 0), col = "#CCFFCC")
# distribucni funkce je spojita,
#	graficky ji zobrazujeme jako krivku
distribucni <- pexp (x, rate = lambda)
plot (x, distribucni, type = "l", col = "blue", lwd = 3, ylab = "distribucni funkce", main = titulek)
pA <- pexp(0.25, rate = lambda)
pA
pB <- pexp(1.5, rate = lambda) - pexp(0.5, rate = lambda)
pB
# (A)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x <= 50)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (50, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
U <- (50 - mu) / sigma
# (B)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x > 35)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
# standardizace U = (X - mu) / sigma
U <- (35 - mu) / sigma
1 - pnorm (U)
# (C)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
# standardizace U = (X - mu) / sigma
pnorm ((45 - mu) / sigma) - pnorm ((35 - mu) / sigma)
indexy <- which ((x > mu - 1.96 * sigma) & (x < mu + 1.96 * sigma))
pnorm (45, mean = mu, sd = sigma) - pnorm (35, mean = mu, sd = sigma)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (U)
1 - pnorm (35, mean = mu, sd = sigma)
pnorm (mu + 1.96 * sigma, mean = mu, sd = sigma) - pnorm (mu - 1.96 * sigma, mean = mu, sd = sigma)
indexy <- which ((x > 35) & (x < 45))
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
# standardizace U = (X - mu) / sigma
pnorm (1.96) - pnorm (-1.96)
# (D)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x <= 50)
# (A)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (50, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
U <- (50 - mu) / sigma
mu <- 40
sigma <- 4
# konce intervalu hodnot x nutno vhodne upravovat
x <- seq (25, 55, by = 0.01)
titulek <- paste ("Normalni (Gaussovo) rozdeleni, ", "mu =", mu, ", sigma = ", sigma)
# hustota pravdepodobnosti
# POZOR! Matematicky znacime N (mu, sigma^2)
# ale v R se zadava (mu, sigma)
hustota <- dnorm (x, mean = mu, sd = sigma)
#	hustotu graficky zobrazujeme jako krivku
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti", main = titulek)
polygon (c(min (x), x, max(x)), c(0, hustota, 0), col = "#CCFFCC")
# distribucni funkce je spojita,
#	graficky ji zobrazujeme jako krivku
distribucni <- pnorm (x, mean = mu, sd = sigma)
plot (x, distribucni, type = "l", col = "blue", lwd = 3, ylab = "distribucni funkce", main = titulek)
titulek <- "porovnani normalnich rozdeleni"
x <- seq (-5, 55, by = 0.01)
hustota1 <- dnorm (x, mean = 40, sd = 4)
hustota2 <- dnorm (x, mean = 40, sd = 5)
hustota3 <- dnorm (x, mean = 40, sd = 1)
hustota4 <- dnorm (x, mean = 0, sd = 1)
plot (x, hustota1, type = "l", col = "blue", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek, xlim = c (-5, 55), ylim = c (0, 0.45))
lines (x, hustota2, col = "green", lwd = 3)
lines (x, hustota3, col = "red", lwd = 3)
lines (x, hustota4, col = "black", lwd = 3)
distribucni1 <- pnorm (x, mean = 40, sd = 4)
distribucni2 <- pnorm (x, mean = 40, sd = 5)
distribucni3 <- pnorm (x, mean = 40, sd = 1)
distribucni4 <- pnorm (x, mean = 0, sd = 1)
plot (x, distribucni1, type = "l", col = "blue", lwd = 3, ylab = "distribucni funkce", main = titulek, xlim = c (-5, 55))
lines (x, distribucni2, col = "green", lwd = 3)
lines (x, distribucni3, col = "red", lwd = 3)
lines (x, distribucni4, col = "black", lwd = 3)
# =====================================================================
mu <- 40
sigma <- 4
x <- seq (25, 55, by = 0.01)
hustota <- dnorm (x, mean = mu, sd = sigma)
distribucni <- pnorm (x, mean = mu, sd = sigma)
# (A)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x <= 50)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (50, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
U <- (50 - mu) / sigma
pnorm (U)
# (B)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x > 35)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
1 - pnorm (35, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
U <- (35 - mu) / sigma
1 - pnorm (U)
# (A)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x <= 50)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (50, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
U <- (50 - mu) / sigma
pnorm (U)
# (B)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x > 35)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
1 - pnorm (35, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
U <- (35 - mu) / sigma
1 - pnorm (U)
# (C)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which ((x > 35) & (x < 45))
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (45, mean = mu, sd = sigma) - pnorm (35, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
pnorm ((45 - mu) / sigma) - pnorm ((35 - mu) / sigma)
# (D)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which ((x > mu - 1.96 * sigma) & (x < mu + 1.96 * sigma))
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
pnorm (mu + 1.96 * sigma, mean = mu, sd = sigma) - pnorm (mu - 1.96 * sigma, mean = mu, sd = sigma)
# standardizace U = (X - mu) / sigma
pnorm (1.96) - pnorm (-1.96)
# (A)
plot (x, hustota, type = "l", col = "blue", lwd = 3, ylab = "hustota pravdepodobnosti")
indexy <- which (x <= 50)
polygon (x[c(min(indexy), indexy, max(indexy))], c(0, hustota[indexy], 0), col = "#FFCC00")
mu <- 2
titulek <- "porovnani Gamma (Erlangova) rozdeleni"
hustota1 <- dgamma (x, shape = 1, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
hustota4
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
hustota1 <- dgamma (x, shape = 1, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
hustota4 <- dgamma (x, shape = 6, scale = mu)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
distribucni1 <- pgamma (x, shape = 1, scale = mu)
distribucni2 <- pgamma (x, shape = 2, scale = mu)
distribucni3 <- pgamma (x, shape = 3, scale = mu)
distribucni4 <- pgamma (x, shape = 6, scale = mu)
plot (x, distribucni1, type = "l", col = "#FF0000", lwd = 3, ylab = "distribucni funkce", main = titulek)
lines (x, distribucni2, col = "#009900", lwd = 3)
lines (x, distribucni3, col = "#0000FF", lwd = 3)
lines (x, distribucni4, col = "#FFCC00", lwd = 3)
hustota1 <- dgamma (x, shape = 1, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
distribucni1 <- pgamma (x, shape = 1, scale = mu)
distribucni2 <- pgamma (x, shape = 2, scale = mu)
a <- 2
titulek <- "porovnani Gamma (Erlangova) rozdeleni"
hustota1 <- dgamma (x, shape = a, scale = 0.5)
hustota2 <- dgamma (x, shape = a, scale = 1)
hustota3 <- dgamma (x, shape = a, scale = 2)
hustota4 <- dgamma (x, shape = a, scale = 3)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
distribucni1 <- pgamma (x, shape = a, scale = 0.5)
distribucni2 <- pgamma (x, shape = a, scale = 1)
distribucni3 <- pgamma (x, shape = a, scale = 2)
distribucni4 <- pgamma (x, shape = a, scale = 3)
plot (x, distribucni1, type = "l", col = "#FF0000", lwd = 3, ylab = "distribucni funkce", main = titulek)
lines (x, distribucni2, col = "#009900", lwd = 3)
lines (x, distribucni3, col = "#0000FF", lwd = 3)
lines (x, distribucni4, col = "#FFCC00", lwd = 3)
hustota1 <- dgamma (x, shape = 1, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
hustota1 <- dgamma (x, shape = 10, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
mu <- 2
titulek <- "porovnani Gamma (Erlangova) rozdeleni"
hustota1 <- dgamma (x, shape = 1, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
mu <- 2
titulek <- "porovnani Gamma (Erlangova) rozdeleni"
hustota1 <- dgamma (x, shape = 10, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
hustota1 <- dgamma (x, shape = 8, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
distribucni1 <- pgamma (x, shape = 1, scale = mu)
distribucni2 <- pgamma (x, shape = 2, scale = mu)
distribucni3 <- pgamma (x, shape = 3, scale = mu)
mu <- 2
titulek <- "porovnani Gamma (Erlangova) rozdeleni"
hustota1 <- dgamma (x, shape = 8, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
hustota1 <- dgamma (x, shape = 4, scale = mu)
hustota2 <- dgamma (x, shape = 2, scale = mu)
hustota3 <- dgamma (x, shape = 3, scale = mu)
hustota4 <- dgamma (x, shape = 6, scale = mu)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
plot (x, hustota1, type = "l", col = "#FF0000", lwd = 3, ylab = "hustoty pravdepodobnosti", main = titulek)
lines (x, hustota2, col = "#009900", lwd = 3)
lines (x, hustota3, col = "#0000FF", lwd = 3)
lines (x, hustota4, col = "#FFCC00", lwd = 3)
